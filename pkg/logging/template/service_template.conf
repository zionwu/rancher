
# service log
<source>
  @type tail
  path /var/log/volumes/*/*/*/apache2/* # path is /var/log/volumes/<namespace>/<stack>/<service>/<type>/*.log
  pos_file /fluentd/etc/log/apache2.log.pos
  tag servicelog.*
  format /^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)?$/ 
  time_format %d/%b/%Y:%H:%M:%S %z
</source>

<source>
  @type tail
  path /var/log/volumes/*/*/*/nginx/* # path is /var/log/volumes/<namespace>/<stack>/<service>/<type>/*.log
  pos_file /fluentd/etc/log/nginx.log.pos
  tag servicelog.*
  format /^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)") (?<gzip_ratio>[^ ]*)?$/
  time_format %d/%b/%Y:%H:%M:%S %z
</source>

<source>
  @type tail
  path /var/log/volumes/*/*/*/syslog/* # path is /var/log/volumes/<namespace>/<stack>/<service>/<type>/*.log
  pos_file /fluentd/etc/log/syslog.log.pos
  tag servicelog.*
  format syslog
</source>

<source>
  @type tail
  path /var/log/volumes/*/*/*/json/* # path is /var/log/volumes/<namespace>/<stack>/<service>/<type>/*.log
  pos_file /fluentd/etc/log/json.log.pos
  tag servicelog.*
  format json
</source>

<filter servicelog.**>
  @type record_transformer
  <record>
    tag ${tag}
    namespace ${tag_parts[4]}
    stack_name ${tag_parts[5]}
    service_name ${tag_parts[6]}
    log_format ${tag_parts[7]}
  </record>
</filter>

{{range $i, $store := .nsTargets -}}
<match  servicelog.var.log.volumes.{{$store.Namespace}}.**>
  @type {{$store.FluentdMatchType}}
  flush_interval {{$store.Target.OutputFlushInterval}}s
  {{ if eq $store.Target.TargetType "elasticsearch"}}
  include_tag_key  true
  host {{$store.Target.ESHost}}
  port {{$store.Target.ESPort}}
  scheme "http"
  reload_connections "true"
  logstash_prefix "{{$store.Target.ESLogstashPrefix}}"
  logstash_format true
  logstash_dateformat  {{$store.Target.ESLogstashDateFormat}}
  type_name  "service_log"
  {{end -}}

  {{ if eq $store.Target.TargetType "splunk"}}
  server  {{$store.Target.SplunkHost}}:{{$store.Target.SplunkPort}}
  all_items true
  protocol {{$store.Target.SplunkProtocol}}
  sourcetype {{$store.Target.SplunkSourceType}}
  time_format {{$store.Target.SplunkTimeFormat}}
  format json
  reload_connections "true"
  {{end -}}

  {{ if eq $store.Target.TargetType "kafka"}}
  {{ if eq $store.Target.KafkaBrokerType "zookeeper" }}
  zookeeper  {{$store.Target.KafkaZookeeper}}
  {{else}}
  brokers  {{$store.Target.KafkaBrokers}}
  {{end}}
  default_topic  {{$store.Target.KafkaDefaultTopic}}
  output_data_type  {{$store.Target.KafkaOutputDataType}}
  output_include_tag true
  output_include_time   true
  # get_kafka_client_log  true
  max_send_retries  {{$store.Target.KafkaMaxSendRetries}}
  {{end -}}
  
  {{ if eq $store.Secret.TargetType $store.Target.TargetType }}
  {{ if $store.Secret.Label -}}
  <{{$store.Secret.Label}}>
  {{end -}}
      {{range $j, $dt := $store.Secret.Data -}}
  {{ if ne $dt "" -}}
  {{$j}} {{$dt}}
  {{end -}}
      {{end -}}
  {{ if $store.Secret.Label -}}
  </{{$store.Secret.Label}}>
  {{end -}}
  {{end -}}
  
  buffer_type file
  buffer_path /fluentd/etc/buffer/service.{{$store.Namespace}}.buffer
  buffer_queue_limit 128
  buffer_chunk_limit 256m
  max_retry_wait 30
  disable_retry_limit
  num_threads 8
  slow_flush_log_threshold 40.0
</match>
{{end -}}